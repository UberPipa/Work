from pandas import read_csv
from VITYAZ.steps.step_1 import *
from VITYAZ.steps.step_2 import *
from VITYAZ.steps.step_3 import *

from VITYAZ.steps.range_date import *
from VITYAZ.steps.step_55 import *

# Step_1
df = create_df('df') # –ß–∏—Ç–∞–µ–º –∏ –¥–µ–ª–∞–µ–º df
df_remont = read_remont() # –°—á–∏—Ç—ã–≤–∞–µ—Ç –∏ —Ö—Ä–∞–Ω–∏—Ç —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ —Å–æ—Å—Ç–∞–≤—ã —Å–ø–∏—Å–∫–æ–º

# Step_2
del_arch(df) # –£–¥–∞–ª—è–µ—Ç –∞—Ä—Ö–∏–≤–Ω—ã–µ –ø–æ —É—Å–ª–æ–≤–∏—é
pars_col(df, 'vendor', 0) # –ü–∞—Ä—Å–∏–º
pars_col(df, 'N_sostava', -2) # –ü–∞—Ä—Å–∏–º
pars_col(df, 'N_camera', -1) # –ü–∞—Ä—Å–∏–º
del_col(df, 'camera') # —É–¥–∞–ª—è–µ—Ç –Ω–µ –Ω—É–∂–Ω—ã–π —Å—Ç–æ–ª–±—Ü—ã
del_col(df, 'status') # —É–¥–∞–ª—è–µ—Ç –Ω–µ –Ω—É–∂–Ω—ã–π —Å—Ç–æ–ª–±—Ü—ã
del_col(df, '–†—û–†–é') # —É–¥–∞–ª—è–µ—Ç –Ω–µ –Ω—É–∂–Ω—ã–π —Å—Ç–æ–ª–±—Ü—ã
str_to_data(df, 'last_time_check_on_camera') # –ü–µ—Ä–µ–¥–µ–ª—ã–≤–∞–µ–º –≤ datetime –∏ –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥ –≤ last_time_check_on_camera
str_to_int(df, "N_sostava") # –º–µ–Ω—è–µ–º –Ω–∞ str –Ω–∞ int
str_to_int(df, "N_camera") # –º–µ–Ω—è–µ–º –Ω–∞ str –Ω–∞ int
float_to_int(df, "last_lat_on_camera") # –º–µ–Ω—è–µ—Ç float –Ω–∞ int, –¥–µ–ª–∞–µ—Ç –Ω–µ —É–≥–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è nan
float_to_int(df, "last_lon_on_camera") # –º–µ–Ω—è–µ—Ç float –Ω–∞ int, –¥–µ–ª–∞–µ—Ç –Ω–µ —É–≥–æ–¥–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è nan
df['—Åount_cam'] = df.groupby('N_sostava')['N_sostava'].transform('size') # –î–µ–ª–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è c–æ—Å—Ç–∞–≤–æ–≤ —Å –∫–æ–ª–∏—á–µ—Å–≤–æ–º –∫–∞–º–µ—Ä –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞
df = df[['vendor', 'N_sostava', 'N_camera', '—Åount_cam', 'last_time_check_on_camera', 'last_lat_on_camera', 'last_lon_on_camera']] # —É–ø–æ—Ä—è–¥–æ—á–µ–≤–∞–µ–º —Å—Ç–æ–ª–±—Ü—ã
df = df.sort_values(by=['N_sostava', 'N_camera']) # –î–≤–æ–π–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –ø–æ N_sostava –∑–∞—Ç–µ–º N_camera

# Step_3
clean_df = clean_df(df) # –î–µ–ª–∞–µ—Ç df —Å –æ–±—â–∏–º –∫–æ–ª–∏—á–µ—Å–≤–æ–º —Å–æ—Å—Ç–∞–≤–æ–≤ –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
count_df = len(clean_df) # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö –≤—Å–µ–≥–æ
count_remont = len(df_remont) # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö –≤—Å–µ–≥–æ
df_remont = clean_df[(clean_df['N_sostava'].isin(df_remont['N_sostava'])) == True] # –•—Ä–∞–Ω–∏—Ç —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ —Å–æ—Å—Ç–∞–≤—ã, –¥–µ–ª–∞–µ—Ç—Å—è –ø–æ —á–∏—Å—Ç–æ–º—É DF
df = df[(df['N_sostava'].isin(df_remont['N_sostava'])) == False] # –•—Ä–∞–Ω–∏—Ç –≤—Å–µ —Å–æ—Å—Ç–∞–≤—ã –±–µ–∑ —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö, —É–¥–∞–ª—è–µ—Ç —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ

# Step_4








# # —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞ –ø–æ –æ–¥–Ω–æ–º—É —Å—Ç–æ–ª–±—Ü—É
# sort(df, 'last_time_check_on_camera')
# # –£–¥–∞–ª–µ–Ω–∏–µ 1–≥–æ –ø–æ–ø–∞–≤—à–µ–≥–æ—Å—è –¥—É–±–ª–∏–∫–∞—Ç–∞
# df = df.drop_duplicates(subset=['N_camera', "N_sostava"], keep='last')
############################################

############################################ –†–∞–±–æ—Ç–∞ —Å –¥–∞—Ç–æ–π
# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –º–æ–¥—É–ª—è –∏ –≤—ã–±–∏—Ä–∞–µ–º –¥–∞—Ç—É
# inputDate = (data_check())
# –ö–æ–Ω–≤–µ—Ä–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ –¥–∞—Ç—É –∏ —Å–Ω–æ–≤–∞ –≤ —Å—Ç—Ä–æ–∫—É
# inputDate = str(datetime.strptime(str(inputDate), '%Y-%m-%d').date())
# –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
today = date.today()
# inputDate = datetime.strptime(str('2022-12-19'), '%Y-%m-%d').date()
inputDate = '2023-01-02'
#inputDate = datetime.datetime.strptime(inputDate, '%Y-%m-%d') # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –µ—Å–ª–∏ –Ω–µ –±—É–¥–µ—Ç —Ä–æ–±–∏—Ç—å
############################################

############################################ –í—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö
# print('‚ÄºÔ∏è–°–≤–µ–∂–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç—Ä–∞–º–≤–∞—è–º –í–∏—Ç—è–∑—å ', '\n')
#
# step_1 = total_in_the_sphere(df_—Åount_cam) # –≤—ã–≤–æ–¥ —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –≤ —Å—Ñ–µ—Ä–µ —Ç—Ä–∞–º–≤–∞–µ–≤ - step_1
# print(step_1)
#
# step_2 = count_rem(remont) # –≤—ã–≤–æ–¥ —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö - step_2
# print(step_2)
#
# step_3 = all_good(df, remont, inputDate)
# print(step_3)
#
# # step_4
# trable_tram = trable_tram(df, remont, inputDate) # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç—Ä–∞–º–≤–∞–∏ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏
#
# step_3 = full_trable_tram(trable_tram)
# print(step_3)





def void(void):
      print("*" * 150)
      print(f'üî∏–í—Å–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–æ –≤ –°—Ñ–µ—Ä—É: {count_df} —à—Ç. ')
      print(f'üõ†–í—Å–µ–≥–æ –≤ —Ä–µ–º–æ–Ω—Ç–µ: {count_remont} —à—Ç. ')
      print("*" * 150)
      with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.width', None):
            print(void)
      print("*" * 150)
      print(void.nunique())
      print("*" * 150)
      print(str(len(void)) + ' Len —ç—Ç–æ–≥–æ –¥–µ—Ä—å–º–∞')
      print("*" * 150)

void(df_remont)

# df
# df_remont
#