def total_in_the_sphere(df_—Åount_cam): # –í—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–æ –≤ –°—Ñ–µ—Ä—É
    a = 'üî∏–í—Å–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–æ –≤ –°—Ñ–µ—Ä—É: ' + str(len(df_—Åount_cam.index)) + ' —à—Ç.'
    return a
# üî∏–í—Å–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–æ –≤ –°—Ñ–µ—Ä—É: 392 —à—Ç.


def count_rem(remont_list): # –í—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–æ–ª—å–∫–æ –≤ —Ä–µ–º–æ–Ω—Ç–µ
    a = 'üõ†–í—Å–µ–≥–æ –≤ —Ä–µ–º–æ–Ω—Ç–µ: ' + str(len(remont_list)) + ' —à—Ç.'
    return a
# üî∏–í—Å–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–æ –≤ –°—Ñ–µ—Ä—É: 392 —à—Ç.
# üõ†–í—Å–µ–≥–æ –≤ —Ä–µ–º–æ–Ω—Ç–µ: 62 —à—Ç.



import pandas as pd

def all_good(df, remont, inputDate): # –í—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–æ–ª—å–∫–æ —Ä–∞–±–æ—Ç–∞–µ—Ç 100%
    df = df[(df.N_sostava.isin(remont)) == False]  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —Ä–µ–º–æ–Ω—Ç–Ω—ã—Ö —Å–æ—Å—Ç–∞–≤–æ–≤ –∏ —É–¥–∞–ª—è–µ–º –∏—Ö
    df = pd.DataFrame(df)  # 1 - –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—Ç–∏ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º Null –≤–æ –≤—Å—ë–º df, –≤–∫–ª—é—á–∞—è —à–∏—Ä–æ—Ç—É –∏ –¥–æ–ª–≥–æ—Ç—É
    df = df.dropna() # 2 - –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫—Ç–∏ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º Null –≤–æ –≤—Å—ë–º df, –≤–∫–ª—é—á–∞—è —à–∏—Ä–æ—Ç—É –∏ –¥–æ–ª–≥–æ—Ç—É
    df = df.loc[df['last_time_check_on_camera'] >= inputDate]  # –û—Ç—Å–µ–∏–≤–∞–µ–º –ø–æ –¥–∞—Ç–µ
    df['real_—Åount_cam'] = df.groupby('N_sostava')['N_sostava'].transform('size')  # –î–µ–ª–∞–µ–º –∫–æ–ª–∏—á–µ—Å–≤–æ (–§–ª–∞–≥–∏!), —Å–∫–æ–ª—å–∫–æ –µ—Å—Ç—å –∫–∞–º–µ—Ä –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ
    df = df.drop_duplicates(subset=["N_sostava"], keep='last')  # –î–µ–ª–∞–µ—Ç DF, –≥–¥–µ –≤—Å–µ —Å–æ—Å—Ç–∞–≤—ã –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–π
    df = df.loc[df['—Åount_cam'] == df['real_—Åount_cam']]  # –£–¥–∞–ª—è–µ—Ç —Ç–µ, –≥–¥–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Ñ–ª–∞–≥–∏
    a = '‚úÖ–ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–µ —Å–æ—Å—Ç–∞–≤—ã: ' + str(len(df)) + ' —à—Ç.'
    return a
# 1 –ë–µ—Ä—ë–º –≤—Å–µ —Å–æ—Å—Ç–∞–≤—ã
# 2 –£–±–∏—Ä–∞–µ–º —Ä–µ–º–æ–Ω—Ç–Ω—ã–µ | –£–±–∏—Ä–∞–µ–º –ù—É–ª–ª | –æ—Ç—Å–µ–∏–≤–∞–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏
# 3 –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Ñ–ª–∞–≥–∞–º –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –∫–∞–º–µ—Ä

# üî∏–í—Å–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–æ –≤ –°—Ñ–µ—Ä—É: 392 —à—Ç.
# üõ†–í—Å–µ–≥–æ –≤ —Ä–µ–º–æ–Ω—Ç–µ: 62 —à—Ç.
# ‚úÖ–ü–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–µ —Å–æ—Å—Ç–∞–≤—ã: 160 —à—Ç.




# –ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç—Ä–∞–º–≤–∞–∏
def trable_tram(df, remont, inputDate):
    df = df[(df.N_sostava.isin(remont)) == False] # –ò—â–µ–º —Ç–µ —Ç—Ä–∞–º–≤–∞–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∫–∞–∫–∏–µ –ª–∏–±–æ –ø—Ä–æ–±–ª–µ–º—ã
    # –í—ã–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Ç—Ä–∞–º–≤–∞–∏
    df = df[
            (df['last_time_check_on_camera'].isnull()) |
            (df['last_lat_on_camera'].isnull()) |
            (df['last_lon_on_camera'].isnull()) |
            (df['last_time_check_on_camera'] < inputDate)
            ]
    df['real_—Åount_cam'] = df.groupby('N_sostava')['N_sostava'].transform('size')  # –î–µ–ª–∞–µ–º –∫–æ–ª–∏—á–µ—Å–≤–æ (–§–ª–∞–≥–∏!), —Å–∫–æ–ª—å–∫–æ –µ—Å—Ç—å –∫–∞–º–µ—Ä –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ
    return df

# –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —ç—Ç–æ:
# 1) –í—Ä–µ–º—è –±–æ–ª—å—à–µ –Ω–æ—Ä–º—ã
# 2) –ù–µ—Ç –≥–µ–æ
# 1) –ù–µ—Ç –¥–µ—Ç–µ–∫—Ü–∏–π




# –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ
def full_trable_tram(trable_tram):
    full_trable_tram = trable_tram.loc[trable_tram['—Åount_cam'] == trable_tram['real_—Åount_cam']]  # –£–¥–∞–ª—è–µ—Ç —Ç–µ, –≥–¥–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Ñ–ª–∞–≥–∏

    full_trable_tram = full_trable_tram.drop_duplicates(subset=["N_sostava"],keep='last')  # –î–µ–ª–∞–µ—Ç DF, –≥–¥–µ –≤—Å–µ —Å–æ—Å—Ç–∞–≤—ã –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–π

    list_full_trable_tram = list(full_trable_tram['N_sostava'])  # –î–µ–ª–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å —Å–æ—Å—Ç–∞–≤–∞–º–∏
    list_full_trable_tram = list(str(i) for i in list_full_trable_tram)  # –î–µ–ª–∞–µ–º —Å—Ç—Ä–æ–∫—É
    a = '‚ùå–ù–µ –¥–æ—Å—Ç—É–ø–Ω—ã ' + str(len(full_trable_tram)) + ' —à—Ç: ' + ', '.join(list_full_trable_tram)
    return a

# –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —ç—Ç–æ:
# –ì–¥–µ 6 –∏–∑ 6 –∫–∞–º–µ—Ä –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã